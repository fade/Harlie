* Chainer (Tuxedo)

- Logarithmic probabilities in chainer
- Coalesce entries in chain DB
- Add smarter indexing for URLs
- Make the context subsystem (and other parts, generally)
  recover more gracefully when errors attack

Major Refactoring for Contexts/Multiheaded [Tuxedo]

There's still some ugly bodgery in the mapping from Web server
ports to contexts.  Build support to incorporate Web server
names, names/IPs, base URIs, etc.

Also, get the bots to get more of their configuration out of
the database rather than half from the config file.

* (Fade)
- YACLML for all HTML generation
  - Looks like we're using cl-who for this.
- Convert other bot commands
  - Are we about done?

- Get full host string w/Web request
- Smart rejoin

- Wrap HTTP GETs in trivial-timeout
- !conv: detect failed return?
- Limit length of title strings
- Paginate full-page URL listing
- Get redirected URIs
- Smarter chaining: punctuation, better endings

- Unit conversion. [DONE]
  - Do some locally
- Test that short URLs won't collide
- Implement transactions in DB
- Read Web pages for chaining data
- Shorter domain name w/out port #
  - Now that we're in production, maybe this takes a back seat.

- Make short URLs longer when table > high water mark
- Auth module
- Contexts for chaining [BEGUN]
- Twitter plug-in, SMS gateway
- More back-end Web stuff

BUGS

- Something was weird with chtml-matcher.
- Drakma needs an option to avoid URL-encoding the URL
  - We have a fix in our tree
  - The RFCs support Drakma's interpretation
  - They may not accept our patch.

- !conv fails on weird utf-8 inputs [Found by Kritter]
- Should https:// links be shortened? [Found by Kritter, Fade]
- http://www.phat.uklinux.net/cgi-bin/crash.cgi doesn't generate a return [Found by Kritter]

- URL http://dl.dropbox.com/u/27845290/object_oriented_programming_in_common_lisp.djvu
  results in this error:
  Corrupted UTF-8 input (initial byte was #b10100110)
     [Condition of type RUNES-ENCODING:ENCODING-ERROR]
  We need to catch that or otherwise work around it.  It happens with other non-HTML payloads,
  too.

Issues
  cl-irc:connection initializes (channels connection) as a hash table
  without :synchronize t.  We could override that, and perhaps should.

  irc-client.lisp:start-ignoring
   - Replace the test somehow and push with pushnew?

  chainer.lisp:random-words
   - If none of the words in the DB match the predicate, we'll loop forever.
     It's a pathological case, but it should be addressed.
